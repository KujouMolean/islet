From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Molean <cnmolean@gmail.com>
Date: Thu, 28 Jul 2022 13:53:51 +0800
Subject: [PATCH] relocate end portal


diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index d5a226a8a58d10d5eada2020e5b111932ed3525c..4441735686c71e0bba6f188efce38b75f10b02a4 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -8,6 +8,7 @@ import com.mojang.datafixers.util.Pair;
 import com.mojang.logging.LogUtils;
 import com.molean.region.monitor.RegionMonitor;
 import com.molean.region.monitor.RegionMonitorManager;
+import com.molean.region.monitor.RegionPos;
 import it.unimi.dsi.fastutil.ints.Int2ObjectMap;
 import it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap;
 import it.unimi.dsi.fastutil.longs.LongSet;
@@ -32,6 +33,7 @@ import java.util.Objects;
 import java.util.Optional;
 import java.util.Set;
 import java.util.UUID;
+import java.util.*;
 import java.util.concurrent.Executor;
 import java.util.function.BooleanSupplier;
 import java.util.function.Function;
@@ -2399,7 +2401,12 @@ public class ServerLevel extends Level implements WorldGenLevel {
 
     public static void makeObsidianPlatform(ServerLevel worldserver, Entity entity) {
         // CraftBukkit end
-        BlockPos blockposition = ServerLevel.END_SPAWN_POINT;
+        BlockPos blockposition;
+        Random random = new Random(new RegionPos(entity.getBlockX() >> 9, entity.getBlockZ() >> 9).hashCode());
+        int x = random.nextInt(480) + 16;
+        int y = random.nextInt(224) + 16;
+        int z = random.nextInt(480) + 16;
+        blockposition = new BlockPos(((entity.getBlockX() >> 9) << 9) + x, worldserver.getMinBuildHeight() + y, ((entity.getBlockZ() >> 9) << 9) + z);
         int i = blockposition.getX();
         int j = blockposition.getY() - 2;
         int k = blockposition.getZ();
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 7f94da8059147760cbdc2476d0e8beda4a105f40..f5b1ada04d3542f888c417120968588b1f870022 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -7,6 +7,7 @@ import com.google.common.collect.Lists;
 import com.google.common.collect.Sets;
 import com.google.common.collect.UnmodifiableIterator;
 import com.mojang.logging.LogUtils;
+import com.molean.region.monitor.RegionPos;
 import it.unimi.dsi.fastutil.objects.Object2DoubleArrayMap;
 import it.unimi.dsi.fastutil.objects.Object2DoubleMap;
 import java.util.Arrays;
@@ -19,6 +20,7 @@ import java.util.Objects;
 import java.util.Optional;
 import java.util.Set;
 import java.util.UUID;
+import java.util.*;
 import java.util.concurrent.atomic.AtomicInteger;
 import java.util.function.BiConsumer;
 import java.util.function.Predicate;
@@ -3505,7 +3507,11 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
             BlockPos blockposition1;
 
             if (flag1) {
-                blockposition1 = ServerLevel.END_SPAWN_POINT;
+                Random random = new Random(new RegionPos(this.getBlockX() >> 9, this.getBlockZ() >> 9).hashCode());
+                int x = random.nextInt(480) + 16;
+                int y = random.nextInt(224) + 16;
+                int z = random.nextInt(480) + 16;
+                blockposition1 = new BlockPos(((this.getBlockX() >> 9) << 9) + x, destination.getMinBuildHeight() + y, ((this.getBlockZ() >> 9) << 9) + z);
             } else {
                 // Paper start - Ensure spawn chunk is always loaded before calculating Y coordinate
                 destination.getChunkAt(destination.getSharedSpawnPos());
